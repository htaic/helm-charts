namespace: "hanwha"
fullnameOverride: anaheim-feature-flags-service
domainPath: "feature-flags-service"
forwardAuthaddress: http://anaheim-graphql-service-anaheim-authentication-service:9876/api/v1/validate
authResponseHeadersRegex Regex: ^X-
trustForwardHeader: true
licenseAuthaddress: http://anaheim-licensing-adapter:3029/license/status-middleware

image:
  replicaCount: 1
  repository: ghcr.io/htaic/anaheim-feature-flags-service
  pullPolicy: Always
  containerPort: 3020
  tag: "latest"
  livenessProbe: healthcheck
  readinessProbe: healthcheck
  hostname: anaheim-feature-flags-service
  env:
    - name: ENVIRONMENT
      value: " "
    - name: GRAPHQLURL
      value: "http://anaheim-graphql-service-hasura:8080/v1/graphql"

imagePullSecrets:
  - name: dockerconfigjson-github-com

service:
  type: ClusterIP

resources:
  requests:
    cpu: 100m
    memory: 150Mi

serviceAccount:
  create: true
  annotations: {}
  name: ""

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 4
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

affinity:
  #Preferred if nodes are less please use this block
  podAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
     - weight: 100
       podAffinityTerm:
         labelSelector:
           matchExpressions:
           - key: app.kubernetes.io/name
             operator: In
             values:
               - anaheim-feature-flags-service
         topologyKey: "topology.kubernetes.io/zone"

  # podAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     - labelSelector:
  #         matchExpressions:
  #         - key: app.kubernetes.io/name
  #           operator: In
  #           values:
  #           - anaheim-licensing-adapter
  #       topologyKey: "topology.kubernetes.io/zone"

topologySpreadConstraints:
  - maxSkew: 1
    topologyKey: "topology.kubernetes.io/zone"
    whenUnsatisfiable: DoNotSchedule
    labelSelector:
      matchLabels:
        app.kubernetes.io/name: anaheim-feature-flags-service
