namespace: "hanwha"
fullnameOverride: anaheim-ai-boxify-service
forwardAuthaddress: http://anaheim-graphql-service-anaheim-authentication-service:9876/api/v1/validate
authResponseHeadersRegex Regex: ^X-
trustForwardHeader: true
licenseAuthaddress: http://anaheim-licensing-adapter:3029/license/status-middleware
domainPath: "ai-boxify"

image:
  replicaCount: 1
  repository: ghcr.io/htaic/anaheim-ai-boxify-service
  pullPolicy: Always
  containerPort: 3022
  tag: "latest"
  livenessProbe: livez
  readinessProbe: readyz
  hostname: anaheim-ai-boxify-service
  envFrom:
    configMapRefs:
      - aws-account-configmap
  env:
    - name: ENVIRONMENT
      value: " "
    - name: HOSTNAME
      value: "anaheim-ai-boxify-service"
    - name: LOG_LEVEL
      value: "INFO"
    - name: LOG_JSON
      value: "true"
    - name: DD_ENABLED
      value: "true"
    - name: MODEL_DEST_RELATIVE_PATH
      value: "model/FastSAM-s.pt"
    - name: MODEL_S3_NAME
      value: "FastSAM-s.pt"
    - name: MODEL_S3_INPUTS
      value: "model-input-params.yaml"
    - name: MODEL_INPUT_DATA_DEVICE_TYPE
      value: "cpu"
    - name: MODEL_INPUT_DATA_RETINA_MASKS
      value: "true"
    - name: MODEL_INPUT_DATA_IMAGE_SIZE
      value: "1024"
    - name: MODEL_INPUT_DATA_CONFIDENCE
      value: "0.25"
    - name: MODEL_INPUT_DATA_IOU
      value: "0.7"
    - name: STORAGE_BASE_PATH
      value: "/assets"
    - name: REST_ENDPOINT_PORT
      value: "3022"
    - name: REVERSE_PROXY_ORIGIN
      value: ""
    # - name: DD_LOGS_INJECTION
    #   value: "true"

imagePullSecrets:
  - name: dockerconfigjson-github-com

service:
  type: ClusterIP

resources:
  requests:
    cpu: 4000m
    memory: 8Gi

serviceAccount:
  create: true
  annotations: {}
  name: ""

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 4
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# podAnnotations:
#   admission.datadoghq.com/python-lib.version: v2.8.0
storage:
  className: efs-storageclass
  provisioner: efs.csi.aws.com
  capacity: 100Gi
  volumeMode: Filesystem
  csi:
    volumeHandle: fs-0ba685ad88487dfee
    volumeAttributes:
      encryptInTransit: "true"
  volumeMountPath: /assets

affinity:
  #Preferred if nodes are less please use this block
  podAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
     - weight: 100
       podAffinityTerm:
         labelSelector:
           matchExpressions:
           - key: app.kubernetes.io/name
             operator: In
             values:
               - anaheim-ai-boxify-service
         topologyKey: "topology.kubernetes.io/zone"
  # podAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #     - labelSelector:
  #         matchExpressions:
  #         - key: app.kubernetes.io/name
  #           operator: In
  #           values:
  #           - anaheim-ai-boxify-service
  #       topologyKey: "topology.kubernetes.io/zone"

topologySpreadConstraints:
  - maxSkew: 1
    topologyKey: "topology.kubernetes.io/zone"
    whenUnsatisfiable: DoNotSchedule
    labelSelector:
      matchLabels:
        app.kubernetes.io/name: anaheim-ai-boxify-service
