namespace: "hanwha"
fullnameOverride: anaheim-ai-boxify-service
forwardAuthaddress: http://anaheim-graphql-service-anaheim-authentication-service:9876/api/v1/validate
authResponseHeadersRegex Regex: ^X-
trustForwardHeader: true
licenseAuthaddress: http://anaheim-licensing-adapter:3029/license/status-middleware
domainPath: "ai-boxify"

image:
  replicaCount: 1
  repository: ghcr.io/htaic/anaheim-ai-boxify-service
  pullPolicy: Always
  containerPort: 3022
  tag: "latest"
  livenessProbe: livez
  readinessProbe: readyz
  hostname: anaheim-ai-boxify-service
  envFrom:
    configMapRefs:
      - aws-account-configmap
  env:
    - name: ENVIRONMENT
      value: " "
    - name: HOSTNAME
      value: "anaheim-ai-boxify-service"
    - name: LOG_LEVEL
      value: "INFO"
    - name: LOG_JSON
      value: "true"
    - name: DD_ENABLED
      value: "true"
    - name: PYTHONPATH
      value: "/source/anaheim-ai-boxify-service/src:/source/anaheim-ai-boxify-service/src"
    - name: MODEL_DEST_RELATIVE_PATH
      value: "model/mobile_sam.pt"
    - name: MODEL_S3_NAME
      value: "mobile_sam.pt"
    - name: MODEL_INPUT_DATA_DEVICE_TYPE
      value: "cpu"
    - name: MODEL_INPUT_DATA_TYPE
      value: "vit_t"
    - name: MODEL_INPUT_DATA_MIN_SEGMENTED_AREA_FILTER
      value: "500"
    - name: STORAGE_BASE_PATH
      value: "/assets"
    - name: REST_ENDPOINT_PORT
      value: "3022"

imagePullSecrets:
  - name: dockerconfigjson-github-com

service:
  type: ClusterIP

resources:
  requests:
    cpu: 100m
    memory: 8Gi

serviceAccount:
  create: true
  annotations: {}
  name: ""

autoscaling:
  enabled: true
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# podAnnotations:
#   admission.datadoghq.com/python-lib.version: v2.8.0
storage:
  className: efs-storageclass
  provisioner: efs.csi.aws.com
  capacity: 100Gi
  volumeMode: Filesystem
  csi:
    volumeHandle: YOUR_FILESYSTEM_ID
    volumeAttributes:
      encryptInTransit: "true"
  volumeMountPath: /assets

environments:
  wprod:
    projectenv: wprod
  wqa:
    projectenv: wqa
  wrelqa:
    projectenv: wrelqa
  wdev:
    projectenv: wdev
  wci:
    projectenv: wci

reverseProxyOrigins:
  wdev: "http://10.16.52.87:8000"
  wci: "http://10.16.65.78:8000"
  wqa: "http://10.16.101.216:8000"
  wprod: "https://10.17.145.32:8000"
  wrelqa: "http://10.20.72.254:8000"

global:
  environment: production


