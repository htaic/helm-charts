fullnameOverride: "baseline"
enableTraefikDashboard: true

# https://github.com/kubernetes-sigs/aws-efs-csi-driver/blob/master/charts/aws-efs-csi-driver/values.yaml
aws-efs-csi-driver:
  controller:
    serviceAccount:
      create: true
      name: efs-csi-controller-sa
      annotations: 
        eks.amazonaws.com/role-arn: arn:aws:iam::YOURACCOUNTNUMBER:role/YOURAWSROLE
  storageClasses:
  - name: efs-storageclass
    mountOptions:
    - tls
    parameters:
      provisioningMode: efs-ap
      fileSystemId: fs-123456


# https://github.com/traefik/traefik-helm-chart/blob/master/traefik/values.yaml
traefik:
  image:
    pullPolicy: Always

# https://github.com/htaic/helm-charts/charts/microfrontend/values.yaml.example
microfrontend:
  namespace: "hanwha"
  fullnameOverride: authmanager
  image:
    replicaCount: 1
    repository: ghcr.io/htaic/authmanager
    pullPolicy: Always
    containerPort: 3002
    tag: "latest"
    hostname: authmanager
    domainPath: "login"
  sidecarimage:
    name: "logging-sidecar"
    repository: ghcr.io/htaic/platform-logging-service
    pullPolicy: Always
    tag: "latest"    
  imagePullSecrets:
    - name: dockerconfigjson-github-com
  service:
    type: ClusterIP
  resources:
    requests:
      cpu: 250m
      memory: 750Mi
  serviceAccount:
    create: false
    annotations: {}
    name: ""
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80


# https://github.com/htaic/helm-charts/charts/faux-auth-service/values.yaml
faux-auth-service:
  fullnameOverride: "faux-auth-service"
  image:
    replicaCount: 1
    repository: ghcr.io/htaic/authentication-service
    pullPolicy: Always
    containerPort: 9876
    tag: "latest"
    hostname: auth
    livenessProbe: "api/v1/livez"
    readinessProbe: "api/v1/readyz"
    domainPath: "auth"
    env:
      - name: LOGSINK
        value: STDOUT
      - name: APP_POSTGRESURI
        value: "postgres://postgres:postgrespassword@baseline-postgresql:5432/postgres"
      - name: NODE_ENV
        value: "development"

  # https://github.com/htaic/helm-charts/charts/faux-auth-service/dependency_chart/postgres/values.yaml
  postgresql:
    namespace: "hanwha"
    postgres:
      env:
        - name: POSTGRES_PASSWORD
          value: postgrespassword
    # Enable EFS on the cluster
    storage:
      className: efs-storageclass
      claimName: postgres-claim
      claimSize: 5Gi

  # https://github.com/htaic/helm-charts/charts/faux-auth-service/dependency_chart/hasura/values.yaml
  hasura:
    namespace: "hanwha"
    hasura:
      domainPath: "hasura"
      env:
        - name: HASURA_GRAPHQL_METADATA_DATABASE_URL
          value: postgres://postgres:postgrespassword@baseline-postgresql:5432/postgres
          ## this env var can be used to add the above postgres database to Hasura as a data source. this can be removed/updated based on your needs
        - name: PG_DATABASE_URL
          value: postgres://postgres:postgrespassword@baseline-postgresql:5432/postgres
          ## enable the console served by server
        - name: HASURA_GRAPHQL_ENABLE_CONSOLE
          value: "true" # set to "false" to disable console
          ## enable debugging mode. It is recommended to disable this in production
        - name: HASURA_GRAPHQL_DEV_MODE
          value: "true"
        - name: HASURA_GRAPHQL_ENABLED_LOG_TYPES
          value: startup, http-log, webhook-log, websocket-log, query-log
          # We have a readonly role for all users other than Hasura GraphQL admin
        - name: HASURA_GRAPHQL_UNAUTHORIZED_ROLE
          value: readonly
        - name: HASURA_GRAPHQL_ADMIN_SECRET
          value: HasuraPassword
    # https://hasura.io/docs/latest/migrations-metadata-seeds/auto-apply-migrations/
    hasuraMetadata: |
      {
        "resource_version": 44,
        "metadata": {
          "version": 3,
          "sources": [
            {
              "name": "baseline-postgresql",
              "kind": "postgres",
              "tables": [
                {
                  "table": {
                    "name": "UserSessions",
                    "schema": "public"
                  },
                  "object_relationships": [
                    {
                      "name": "User",
                      "using": {
                        "foreign_key_constraint_on": "userid"
                      }
                    }
                  ],
                  "select_permissions": [
                    {
                      "role": "readonly",
                      "permission": {
                        "columns": [
                          "createdat",
                          "expirationtime",
                          "id",
                          "ipaddress",
                          "isloggedout",
                          "logintime",
                          "logouttime",
                          "updatedat",
                          "userid"
                        ],
                        "filter": {}
                      }
                    }
                  ]
                },
                {
                  "table": {
                    "name": "Users",
                    "schema": "public"
                  },
                  "array_relationships": [
                    {
                      "name": "UserSessions",
                      "using": {
                        "foreign_key_constraint_on": {
                          "column": "userid",
                          "table": {
                            "name": "UserSessions",
                            "schema": "public"
                          }
                        }
                      }
                    }
                  ],
                  "select_permissions": [
                    {
                      "role": "readonly",
                      "permission": {
                        "columns": [
                          "createdat",
                          "email",
                          "firstname",
                          "id",
                          "lastname",
                          "loggedinduration",
                          "updatedat",
                          "username"
                        ],
                        "filter": {}
                      }
                    }
                  ]
                }
              ],
              "configuration": {
                "connection_info": {
                  "database_url": "postgres://postgres:postgrespassword@baseline-postgresql:5432/postgres",
                  "isolation_level": "read-committed",
                  "use_prepared_statements": false
                }
              },
              "customization": {
                "naming_convention": "hasura-default"
              }
            }
          ],
          "actions": [
            {
              "name": "createUser",
              "definition": {
                "handler": "http://faux-auth-service:9876/api/v1/createUser",
                "output_type": "CreateUserOutput",
                "arguments": [
                  {
                    "name": "username",
                    "type": "String!"
                  },
                  {
                    "name": "password",
                    "type": "String!"
                  },
                  {
                    "name": "token",
                    "type": "String!"
                  },
                  {
                    "name": "email",
                    "type": "String"
                  },
                  {
                    "name": "firstname",
                    "type": "String"
                  },
                  {
                    "name": "lastname",
                    "type": "String"
                  },
                  {
                    "name": "loggedinduration",
                    "type": "Int!"
                  }
                ],
                "type": "mutation",
                "kind": "synchronous",
                "timeout": 60
              },
              "permissions": [
                {
                  "role": "readonly"
                }
              ]
            },
            {
              "name": "deleteUser",
              "definition": {
                "handler": "http://faux-auth-service:9876/api/v1/deleteUser",
                "output_type": "DeleteUserOutput",
                "arguments": [
                  {
                    "name": "token",
                    "type": "String!"
                  },
                  {
                    "name": "username",
                    "type": "String!"
                  }
                ],
                "type": "mutation",
                "kind": "synchronous",
                "timeout": 60
              },
              "permissions": [
                {
                  "role": "readonly"
                }
              ]
            },
            {
              "name": "login",
              "definition": {
                "handler": "http://faux-auth-service:9876/api/v1/login",
                "output_type": "LoginOutput",
                "arguments": [
                  {
                    "name": "username",
                    "type": "String!"
                  },
                  {
                    "name": "password",
                    "type": "String!"
                  }
                ],
                "type": "mutation",
                "kind": "synchronous",
                "timeout": 60
              },
              "comment": "login action",
              "permissions": [
                {
                  "role": "readonly"
                }
              ]
            },
            {
              "name": "logout",
              "definition": {
                "handler": "http://faux-auth-service:9876/api/v1/logout",
                "output_type": "LogoutOutput",
                "arguments": [
                  {
                    "name": "token",
                    "type": "String!"
                  }
                ],
                "type": "mutation",
                "kind": "synchronous",
                "timeout": 60
              },
              "permissions": [
                {
                  "role": "readonly"
                }
              ]
            },
            {
              "name": "refreshToken",
              "definition": {
                "handler": "http://faux-auth-service:9876/api/v1/refreshToken",
                "output_type": "RefreshTokenOutput",
                "arguments": [
                  {
                    "name": "token",
                    "type": "String!"
                  }
                ],
                "type": "mutation",
                "kind": "synchronous",
                "timeout": 60
              },
              "permissions": [
                {
                  "role": "readonly"
                }
              ]
            },
            {
              "name": "updatePassword",
              "definition": {
                "handler": "http://faux-auth-service:9876/api/v1/updatePassword",
                "output_type": "UpdatePasswordOutput",
                "arguments": [
                  {
                    "name": "username",
                    "type": "String!"
                  },
                  {
                    "name": "password",
                    "type": "String!"
                  },
                  {
                    "name": "token",
                    "type": "String!"
                  }
                ],
                "type": "mutation",
                "kind": "synchronous",
                "timeout": 60
              },
              "comment": "updatePassword",
              "permissions": [
                {
                  "role": "readonly"
                }
              ]
            },
            {
              "name": "validateToken",
              "definition": {
                "handler": "http://faux-auth-service:9876/api/v1/validateToken",
                "output_type": "ValidateOutput",
                "arguments": [
                  {
                    "name": "token",
                    "type": "String!"
                  }
                ],
                "type": "query",
                "timeout": 60
              },
              "permissions": [
                {
                  "role": "readonly"
                }
              ]
            }
          ],
          "custom_types": {
            "input_objects": [
              {
                "name": "UsernamePasswordInput",
                "fields": [
                  {
                    "name": "username",
                    "type": "String!"
                  },
                  {
                    "name": "password",
                    "type": "String!"
                  }
                ]
              },
              {
                "name": "LogoutInput",
                "fields": [
                  {
                    "name": "token",
                    "type": "String!"
                  }
                ]
              }
            ],
            "objects": [
              {
                "name": "LoginOutput",
                "fields": [
                  {
                    "name": "token",
                    "type": "String"
                  },
                  {
                    "name": "expirationTime",
                    "type": "String"
                  }
                ]
              },
              {
                "name": "LogoutOutput",
                "fields": [
                  {
                    "name": "isLoggedOut",
                    "type": "Boolean!"
                  },
                  {
                    "name": "isSessionFound",
                    "type": "Boolean!"
                  }
                ]
              },
              {
                "name": "ValidateOutput",
                "fields": [
                  {
                    "name": "isValid",
                    "type": "Boolean!"
                  }
                ]
              },
              {
                "name": "CreateUserOutput",
                "fields": [
                  {
                    "name": "isUserAdded",
                    "type": "Boolean!"
                  },
                  {
                    "name": "isUserAlreadyExists",
                    "type": "Boolean!"
                  },
                  {
                    "name": "isAuthorized",
                    "type": "Boolean!"
                  }
                ]
              },
              {
                "name": "RefreshTokenOutput",
                "fields": [
                  {
                    "name": "token",
                    "type": "String"
                  },
                  {
                    "name": "expirationTime",
                    "type": "String"
                  }
                ]
              },
              {
                "name": "DeleteUserOutput",
                "fields": [
                  {
                    "name": "isAuthorized",
                    "type": "Boolean!"
                  },
                  {
                    "name": "isUserDeleted",
                    "type": "Boolean!"
                  },
                  {
                    "name": "isUserFound",
                    "type": "Boolean!"
                  }
                ]
              },
              {
                "name": "UpdatePasswordOutput",
                "fields": [
                  {
                    "name": "isUpdated",
                    "type": "Boolean!"
                  },
                  {
                    "name": "isUserFound",
                    "type": "Boolean!"
                  }
                ]
              }
            ]
          }
        }
      }
