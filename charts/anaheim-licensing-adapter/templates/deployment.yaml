apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include ".helm.fullname" . }}
  namespace: {{ .Values.namespace }}
  labels:
    {{- include ".helm.labels" . | nindent 4 }}
    {{- with index .Values.environments .Values.global.environment }}
    tags.datadoghq.com/env: {{ .projectenv | quote }}
    {{- end }}
    tags.datadoghq.com/service: {{ include ".helm.serviceAccountName" . }}
    tags.datadoghq.com/version: {{ .Values.image.tag }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.image.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include ".helm.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        ad.datadoghq.com/{{ include ".helm.serviceAccountName" . }}.logs: '[{"source": "nodejs", "service": "{{ include ".helm.serviceAccountName" . }}"}]'
      labels:
        date: "{{ now | unixEpoch }}"
        {{- include ".helm.selectorLabels" . | nindent 8 }}
        {{- with index .Values.environments .Values.global.environment }}
        tags.datadoghq.com/env: {{ .projectenv | quote }}
        {{- end }}
        tags.datadoghq.com/service: {{ include ".helm.serviceAccountName" . }}
        tags.datadoghq.com/version: {{ .Values.image.tag }}
    spec:
      hostname: {{ .Values.image.hostname }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include ".helm.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        {{- if .Values.sidecarimage }}
        - name: "{{ .Values.sidecarimage.name }}"
          image: "{{ .Values.sidecarimage.repository }}:{{ .Values.sidecarimage.tag }}"
          imagePullPolicy: {{ .Values.sidecarimage.pullPolicy }}
        {{- end }}      
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env: 
            - name: GRAPHQLSERVERTOKEN
              valueFrom:
                secretKeyRef:
                  name: hasura-secret
                  key: HASURA_GRAPHQL_ADMIN_SECRET
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: aws-account-configmap
                  key: AWS_REGION
            - name: AWS_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-eventbridge-secret
                  key: AWS_ACCESS_KEY
            - name: AWS_PROJECT_SQS_URL
              valueFrom:
                secretKeyRef:
                  name: aws-sqs-secret
                  key: AWS_PROJECT_SQS_URL
            - name: AWS_PROJECT_SQS_NAME
              valueFrom:
                secretKeyRef:
                  name: aws-sqs-secret
                  key: AWS_PROJECT_SQS_NAME
            - name: AUTHENTICATION_HOSTNAME
              valueFrom:
                secretKeyRef:
                  name: graphql-auth-secret
                  key: AUTHENTICATION_HOSTNAME   
            - name: DUCLOXAPIKEY
              valueFrom:
                secretKeyRef:
                  name: "duclo-api-key-secret"
                  key: DUCLO_API_KEY      
            - name: DUCLO_PARTNER_LICENSE_URL
              valueFrom:
                configMapKeyRef:
                  name: duclo-configmap
                  key: DUCLO_PARTNER_LICENSE_URL
            - name: DUCLO_AUTH_CERTS_URL_LICENSE_URL
              valueFrom:
                configMapKeyRef:
                  name: duclo-configmap
                  key: DUCLO_AUTH_CERTS_URL
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/env']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version']
            {{ if or (eq .Values.global.environment "wprod") (eq .Values.global.environment "wqa") }}
            - name: NODE_ENV
              value: "production"
            {{ else }}
            - name: NODE_ENV
              value: "development"
          {{- end }}
          {{- if .Values.image.env }}
            {{- toYaml .Values.image.env | nindent 12 }}
          {{- end }}
          envFrom:
              - secretRef:
                  name: hasura-secret
              - secretRef:
                  name: graphql-auth-secret
              - secretRef:
                  name: aws-eventbridge-secret
              - secretRef:
                  name: aws-sqs-secret
              - configMapRef:
                  name: aws-account-configmap
              - configMapRef:
                  name: duclo-configmap
          args: [ {{.Values.image.args}} ]
          ports:
            - name: http
              containerPort: {{ .Values.image.containerPort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /{{ .Values.image.livenessProbe }}
              port: http
            {{- if .Values.image.livenessProbePeriodSeconds }}
            periodSeconds: {{ .Values.image.livenessProbePeriodSeconds }}
            {{- end }}
          readinessProbe:
            httpGet:
              path: /{{ .Values.image.readinessProbe }}
              port: http
            {{- if .Values.image.readinessProbePeriodSeconds }}
            periodSeconds: {{ .Values.image.readinessProbePeriodSeconds }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
