fullnameOverride: "baseline"
enableTraefikDashboard: true

AWS:
  region: us-west-2
  accountId: "040054290357"
  event_bridge_key_id: AKIAQSU3L6626HE4DKTS
  event_bridge_key_secret: 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
  event_bus_arn: arn:aws:events:us-west-2:040054290357:event-bus/pvt-hv-wddl-wci-ml-bus
  eventbridge_hostname: https://pvt-k8s-hv-wci-wddl-uw2-1.wci.hticdev.net/eventbridge
  auth_hostname: https://pvt-k8s-hv-wci-wddl-uw2-1.wci.hticdev.net/auth
  authServiceCookieOptionsDomain: pvt-k8s-hv-wci-wddl-uw2-1.wci.hticdev.net
  sqs_name: pvt-sqs-wddl-wci-training-assets-verification-uw2-q
  sqs_url: https://sqs.us-west-2.amazonaws.com/040054290357/pvt-sqs-wddl-wci-training-assets-verification-uw2-q
  duclo_domain: api.dev.platform.hanwhavision.cloud
  duclo_auth_certs_url: https://auth.duclo.net/realms/HvaVmsAppRealm/protocol/openid-connect/certs
  
dockerCredentials:
  username: HanwhaAutomation
  token: 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

wavesync:
  token: _XHbMXve8E2gLJbeI5NrchgJ

graphql:
  hasuraToken: HALDBzeLLBhZtg2hmc517PVV
  databasePassword: tWTOeSaoDNFu6JemaU9h5jwM
  databaseName: graphqlpvt
  databaseUser: graphqlpvt
  databaseHost: db-hv-wci-wddl-uw2-1.chozznczc4ut.us-west-2.rds.amazonaws.com

# https://github.com/traefik/traefik-helm-chart/blob/master/traefik/values.yaml
traefik:
  deployment:
    kind: Deployment
  image:
    pullPolicy: Always
  service:
    type: NodePort
  ports:
    web:
      # port to alb
      nodePort: 32414
      targetPort: web

# https://github.com/kubernetes-sigs/aws-efs-csi-driver/blob/master/charts/aws-efs-csi-driver/values.yaml
aws-efs-csi-driver:
  controller:
    serviceAccount:
      create: true
      name: efs-csi-controller-sa
      annotations:
        eks.amazonaws.com/role-arn: arn:aws:iam::040054290357:role/pvt-k8s-hv-wci-wddl-uw2-1-cluster-basicrole
  storageClasses:
    - name: efs-storageclass
      mountOptions:
        - tls
      parameters:
        provisioningMode: efs-ap
        fileSystemId: fs-03a2549a17944ff69

postgresql:
  service:
    type: ClusterIP
  resources:
    requests:
      cpu: 100m
      memory: 250Mi
  serviceAccount:
    create: false
    annotations: {}
    name: ""
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
  postgres:
    db: postgres
    user: postgres
    password: SbdIDJC6xW2oJN5C.n8Az.NY
    replicaCount: 1
    repository: postgres
    tag: 14
    pullPolicy: Always
    containerPort: 5432
    env:
      # https://hub.docker.com/_/postgres
      - name: PGDATA
        value: /var/lib/postgresql/data/postgres # # To enable EFS on the cluster, use the following values in the root helm chart
  RDS:
    host: db-hv-wci-wddl-uw2-1.chozznczc4ut.us-west-2.rds.amazonaws.com
