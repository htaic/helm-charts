fullnameOverride: "baseline"
enableTraefikDashboard: true

AWS:
  region: YOUR_AWS_REGION
  accountId: "YOUR_AWS_ACCOUNT_ID"
  event_bridge_key_id: YOUR_EVENT_BRIDGE_KEY
  event_bridge_key_secret: YOUR_EVENT_BRIDGE_KEY_SECRET
  event_bus_arn: YOUR_EVENTBUS_ARN
  eventbridge_hostname: YOUR_EVENT_BRIDGE_URL
  auth_hostname: YOUR_AUTH_SERVICE_URL
  authServiceCookieOptionsDomain: YOUR_AUTH_SERVICE_DOMAIN
  sqs_name: YOUR_SQS_NAME
  sqs_url: YOUR_SQS_URL
  duclo_domain: YOUR_DUCLO_DOMAIN
  duclo_auth_certs_url: YOUR_DUCLO_AUTH_CERTS_URL
  aws_project_sqs_name: YOUR_AWS_PROJECT_SQS_NAME
  aws_project_sqs_url: YOUR_AWS_PROJECT_SQS_URL
  aws_license_sqs_name: YOUR_AWS_LICENSE_SQS_NAME
  aws_license_sqs_url: YOUR_AWS_LICENSE_SQS_URL
  aws_model_s3_uri_path: YOUR_AWS_MODEL_S3_URI_PATH
  duclo_api_key: YOUR_DUCLO_API_KEY
  vite_datadog_client_token : YOUR_DATADOG_CLIENT_TOKEN
  vite_datadog_url : YOUR_DATADOG_URL 

  env: YOUR_ENV_VARIABLE

dockerCredentials:
  username: YOUR_GITHUB_USER
  token: YOUR_GITHUB_TOKEN

wavesync:
  token: YOUR_WAVESYNC_TOKEN

graphql:
  hasuraToken: YOUR_HASURA_TOKEN
  databasePassword: YOUR_HASURA_DB_PASSWORD
  databaseName: YOUR_HASURA_DB_NAME
  databaseUser: YOUR_HASURA_DB_USER
  databaseHost: YOUR_RDS_HOST

# https://github.com/traefik/traefik-helm-chart/blob/master/traefik/values.yaml
traefik:
  deployment:
    kind: Deployment
  image:
    pullPolicy: Always
  service:
    type: NodePort
  ports:
    web:
      # port to alb
      nodePort: 32414
      targetPort: web

  logs:
    access:
      # -- To enable access logs
      enabled: true
      addInternals:
      fields:
        general:
          # -- Available modes: keep, drop, redact.
          defaultmode: keep
  metrics:
  ## -- Enable metrics for internal resources. Default: false
   datadog:
     ## Address instructs exporter to send metrics to datadog-agent at this address.
     address: /var/run/datadog/dsd.socket
     ## The interval used by the exporter to push metrics to datadog-agent. Default=10s
     # pushInterval: 30s
     ## The prefix to use for metrics collection. Default="traefik"
     # prefix: traefik
     ## Enable metrics on entry points. Default=true
     # addEntryPointsLabels: false
     ## Enable metrics on routers. Default=false
     # addRoutersLabels: true
     ## Enable metrics on services. Default=true
     # addServ
  tracing: {}

    
  providers:
  kubernetesCRD:
    allowCrossNamespace: true
    allowExternalNameServices: true

# https://github.com/kubernetes-sigs/aws-efs-csi-driver/blob/master/charts/aws-efs-csi-driver/values.yaml
aws-efs-csi-driver:
  controller:
    serviceAccount:
      create: true
      name: efs-csi-controller-sa
      annotations:
        eks.amazonaws.com/role-arn: arn:aws:iam::YOUR_AWS_ACCOUNT_ID:role/YOUR_EKS_ROLE
  storageClasses:
    - name: efs-storageclass
      mountOptions:
        - tls
      parameters:
        provisioningMode: efs-ap
        fileSystemId: YOUR_FILESYSTEM_ID

postgresql:
  service:
    type: ClusterIP
  resources:
    requests:
      cpu: 100m
      memory: 250Mi
  serviceAccount:
    create: false
    annotations: {}
    name: ""
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
  postgres:
    db: postgres
    user: postgres
    password: "YOUR_POSTGRES_PASSWORD"
    replicaCount: 1
    repository: postgres
    tag: 14
    pullPolicy: Always
    containerPort: 5432
    env:
      # https://hub.docker.com/_/postgres
      - name: PGDATA
        value: /var/lib/postgresql/data/postgres # # To enable EFS on the cluster, use the following values in the root helm chart
  # storage:
  #   className: efs-storageclass
  #   provisioner: efs.csi.aws.com
  #   capacity: 20Gi
  #   volumeMode: Filesystem
  #   csi:
  #     volumeHandle: YOUR_FILESYSTEM_ID
  #     volumeAttributes:
  #       encryptInTransit: "true"
  #   volumeMountPath: /var/lib/postgresql/data
  # RDS:
  #   host: "YOUR_RDS_HOST"
